server {
    listen       80 default_server;
    server_name  mexicoeligebien.mx;

    charset utf-8;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}


upstream api {

  server app:3031;
  # Enable TCP connection cache
  keepalive 32;

}


server {

    listen       80;
    server_name  api.mexicoeligebien.mx;
    # Force TLS
    #return 301 $server_name$request_uri;

    client_max_body_size 11M;

    location / {

      proxy_set_header Host $host;
      # Upgrade connection to HTTP 1.1
      proxy_http_version 1.1;
      # Enable keepalive by clearing Connection: Close HTTP header
      proxy_set_header Connection "";

      # Docker container name instead of IP or FQDN
      proxy_pass http://api;
    }


}




#server {
#
#    listen       443 ssl http2;
#    server_name  api.mexicoeligebien.mx;
#
#    charset utf-8;
#    #access_log  /var/log/nginx/log/host.access.log  main;
#
    #ssl_certificate "/etc/nginx/tls/fullchain.cer";
    #ssl_certificate_key "/etc/nginx/tls/api.mexicoeligebien.mx.key";
    #ssl_trusted_certificate "/etc/nginx/tls/isrg-root-ocsp-x1.pem";
    #ssl_session_cache shared:SSL:10m;
    #ssl_session_timeout 50m;
    #ssl_protocols TLsv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    #ssl_prefer_server_ciphers on;

#    client_max_body_size 11M;
#
#    location / {
#
#      proxy_set_header Host $host;
#      # Upgrade connection to HTTP 1.1
#      proxy_http_version 1.1;
#      # Enable keepalive by clearing Connection: Close HTTP header
#      proxy_set_header Connection "";
#
#      # Docker container name instead of IP or FQDN
#      proxy_pass http://api;
#    }
#
#}

server {
  location /basic_status {
    stub_status;
  }
}
